name: Code quality

on:
  - workflow_call

jobs:
  code_quality_score:
    runs-on: self-hosted
    name: Calculate score change
    env: 
      BUNDLE_GEMFILE: ${{ github.workspace }}/CodeQuality.gemfile
      BUNDLE_DEPLOYMENT: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: head

      - name: Checkout base code
        uses: actions/checkout@v4
        with:
          path: base
          ref: ${{ github.event.pull_request.base.sha }}

      - name: Create gemfile
        run: |
          echo "source 'https://rubygems.org'" > ${{ github.workspace }}/CodeQuality.gemfile
          echo "git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }" >> ${{ github.workspace }}/CodeQuality.gemfile
          echo "gem 'code_quality_score', git: 'https://github.com/boost/code_quality_score'" >> ${{ github.workspace }}/CodeQuality.gemfile
          echo "gem 'rexml'" >> ${{ github.workspace }}/CodeQuality.gemfile
          rm --force ${{ github.workspace }}/CodeQuality.gemfile.lock
          rm --force ${{ github.workspace }}/.bundle/config
          cp head/.ruby-version .ruby-version
          cp head/.*.yml .

      - name: Set up Ruby & bundle
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
          cache-version: 3

      - name: Calculate the quality scores
        run: |
          bundle binstubs code_quality_score --force
          bin/code_quality_score_comparison ./base/ ./head/ > formatted_message.md
          cat formatted_message.md > $GITHUB_STEP_SUMMARY

      - name: Find any existing comment
        uses: peter-evans/find-comment@v2
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: '## Code quality score'

      - name: Add/update comment to PR
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{github.event.pull_request.number}}
          body-path: 'formatted_message.md'
          edit-mode: replace

      - name: Generate diffs
        run: |
          BASE_FOLDERS=
          HEAD_FOLDERS= 
          if [ -d "./base/app" ]; then
            $BASE_FOLDERS .= 'base/app/* '
          fi
          if [ -d "./base/lib" ]; then
            $BASE_FOLDERS .= 'base/lib/* '
          fi
          if [ -d "./head/app" ]; then
            $HEAD_FOLDERS .= 'head/app/* '
          fi
          if [ -d "./head/lib" ]; then
            $HEAD_FOLDERS .= 'head/lib/* '
          fi
          flay $BASE_FOLDERS -# > flay_output_base.txt
          flay $HEAD_FOLDERS -# > flay_output_head.txt

          flog $BASE_FOLDERS -ga > flog_output_base.txt
          flog $HEAD_FOLDERS -ga > flog_output_head.txt

          reek $BASE_FOLDERS --no-line-numbers --no-progress > reek_output_base.txt
          reek $HEAD_FOLDERS --no-line-numbers --no-progress > reek_output_head.txt

          echo "<details>" >> $GITHUB_STEP_SUMMARY
          echo "<summary>Flay</summary>" >> $GITHUB_STEP_SUMMARY
          echo "```diff" >> $GITHUB_STEP_SUMMARY
          diff -u0 flay_output_base.text flay_output_head.text > $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          echo "</details>" >> $GITHUB_STEP_SUMMARY

          echo "<details>" >> $GITHUB_STEP_SUMMARY
          echo "<summary>Flog</summary>" >> $GITHUB_STEP_SUMMARY
          echo "```diff" >> $GITHUB_STEP_SUMMARY
          diff -u0 flog_output_base.text flay_output_head.text > $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          echo "</details>" >> $GITHUB_STEP_SUMMARY

          echo "<details>" >> $GITHUB_STEP_SUMMARY
          echo "<summary>Reek</summary>" >> $GITHUB_STEP_SUMMARY
          echo "```diff" >> $GITHUB_STEP_SUMMARY
          diff -u0 reek_output_base.text reek_output_head.text > $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          echo "</details>" >> $GITHUB_STEP_SUMMARY

      - name: Fail job if score degraded
        run: |
          if grep -q worse formatted_message.md; then
            exit 1
          fi

